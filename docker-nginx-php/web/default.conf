server {
                server_name www.sample.com;
                return 301 https://sample.com$request_uri;
                #www付きの時はwwwなしと同じページへ
                #localhostで使うときはdnsmasq使ってaddress=/sample.com/127.0.0.1
}

#ここからサブドメイン向け
#subdomain.sample.comへのアクセスがあるとサブディレクトリ 表示
#subdomain.sample.com->sample.com/subdomain/
# server {
#                 server_name ~^(?<subhost>.+)\.sample\.com$;
#                 root  /var/www/;
#                 return 301 /redirect/$subhost$request_uri;
#                 location /redirect {
#                         root  /var/www/redirect/$subhost$request_uri;
#                         index index.html index.php;
#                         try_files $uri $uri/ @dinamic;
#                 }
#見つからなければデフォルトページへ
#                 location @dinamic {
#                 proxy_pass https://sample.com;
#                 }
#                 error_page 404 /404.html;
#                 location /404.html {
#                         root /var/www/error_custom;
#                 }
#                 error_page 401 /401.html;
#                 location /401.html {
#                         root /var/www/error_custom;
#                 }
#                 error_page 403 /403.html;
#                 location /403.html {
#                         root /var/www/error_custom;
#                 }
#                 error_page 500 /500.html;
#                 location /500.html {
#                         root /var/www/error_custom;
#                 }

#                 error_page 502 /502.html;
#                 location /502.html {
#                         root /var/www/error_custom;
#                 }

#                 error_page 503 /503.html;
#                 location /503.html {
#                         root /var/www/error_custom;
#                 }
# }
server {
                client_max_body_size 20M;
                listen 80;
#localhostで使うときは/etc/hostsに設定追加
                server_name sample.com;
                root  /var/www/;

#try_filesの扱い気をつける。$uri　見つからなければ　$uri/でディレクトリの存在を確認　
#それでもなければ(file引数に該当するファイルがひとつも存在しなかった場合)最後のパラメーターで
#指定されたものへの"内部リダイレクト が行われます"
                location / {
                        root  /var/www/;
                        index index.html index.php;
                        try_files $uri $uri/ =404;
                }
#https://sample.com/　へのアクセスを https://sample.com/front/top/
                location = / {
                        return 301 https://sample.com/front/top/;
                }
#Basic認証　.htpasswdファイルを作成配置(awsならbasic認証無くても)
                location /apps\/admin {
                        auth_basic "auth basic";
                        auth_basic_user_file /etc/nginx/.htpasswd;
                }
#上記のtry_filesで該当しなかった時ここに飛んでくる
#try_files $uri =404;書くことで.phpファイルもない場合はちゃんと404に飛ばしてあげる
                location ~ \.php$ {
                                try_files $uri =404;
                                fastcgi_pass php:9000;
                                fastcgi_index index.php;    
                                fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
                                include fastcgi_params;
                }
#カスタムエラーページの作成 まとめてもかける
# error_page 500 502 503 504  /50x.html;
# error_page 400 410 403      /40x.html;

# location = /50x.html {
#     root /var/www/error_customr;
# }

# location = /40x.html {
#     root /var/www/error_custom;
#     allow all;
# }
#アクセス制限をかけてない人にもページ表示するにはallow all
                error_page 404 /404.html;
                location = /404.html {
                        root /var/www/error_custom;
                        allow all;
                }
                error_page 401 /401.html;
                location = /401.html {
                        root /var/www/error_custom;
                }
                error_page 403 /403.html;
                location = /403.html {
                        root /var/www/error_custom;
                }
                error_page 500 /500.html;
                location = /500.html {
                        root /var/www/error_custom;
                }

                error_page 502 /502.html;
                location = /502.html {
                        root /var/www/error_custom;
                }

                error_page 503 /503.html;
                location = /503.html {
                        root /var/www/error_custom;
                }
#alias指定しておくとcssやjsもroot気にせず呼ぶ
#/var/www/error_custom/{css,images,javascripts}
#/var/www/error_custom/{50*.html,40*.html}
                location /css {
                        alias /var/www/error_custom/css;
                }

                location /images {
                        alias /var/www/error_custom/img;
                }

                location /javascripts {
                        alias /var/www/error_custom/js;
                }
                location ~ /(medias|materials)/.*\.(jpg|jpeg|png|gif)$ {
                        set $dir $1;
                        if ($query_string ~ .*=.*) {
                                rewrite  ^/(medias|materials)/(.*\.(jpg|jpeg|png|gif))$ /image_filter/$2 last;
                        }
                }

                location ~ ^/image_filter/(.*\.(jpg|jpeg|png|gif))$ {
                        internal;

                        set $file $1;
                        set $width 150;
                        set $height 150;
                        set $quality 75;

                        if ($arg_width ~ (\d*)) {
                                set $width $1;
                        }
                        if ($arg_height ~ (\d*)) {
                                set $height $1;
                        }
                        if ($arg_quality ~ (100|[1-9][0-9]|[1-9])) {
                                set $quality $1;
                        }

                        if ($arg_type = "resize") {
                                rewrite ^ /resize last;
                        }
                        
                        rewrite ^ /crop last;
                }

                location /resize {
                        internal;
                        rewrite  ^ /$dir/$file break;
                        image_filter  resize  $width $height;
                        image_filter_jpeg_quality $quality;
                        error_page 415 = @empty;
                }

                location /crop {
                        internal;
                        rewrite  ^ /$dir/$file break;
                        image_filter  crop  $width $height;
                        image_filter_jpeg_quality $quality;
                        error_page 415 = @empty;
                }

                location @empty {
                        empty_gif;
                }
                location ~ .css$ {
                add_header  Content-Type    text/css;
                }

                location ~ .js$ {
                        add_header  Content-Type    application/x-javascript;                  
                }

}